{"ast":null,"code":"var _jsxFileName = \"/Users/hanauchiakiya/GitHub/re-Think/src/components/Note/index.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { LexicalComposer } from '@lexical/react/LexicalComposer';\nimport { PlainTextPlugin } from '@lexical/react/LexicalPlainTextPlugin';\nimport { ContentEditable } from '@lexical/react/LexicalContentEditable';\nimport { HistoryPlugin } from '@lexical/react/LexicalHistoryPlugin';\nimport { OnChangePlugin } from '@lexical/react/LexicalOnChangePlugin';\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport LexicalErrorBoundary from '@lexical/react/LexicalErrorBoundary';\n\n// Lexical React plugins are React components, which makes them\n// highly composable. Furthermore, you can lazy load plugins if\n// desired, so you don't pay the cost for plugins until you\n// actually use them.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyCustomAutoFocusPlugin() {\n  _s();\n  const [editor] = useLexicalComposerContext();\n  useEffect(() => {\n    // Focus the editor when the effect fires!\n    editor.focus();\n  }, [editor]);\n  return null;\n}\n_s(MyCustomAutoFocusPlugin, \"mCqe7sh4aC9mLBXPHfG3d/PNTaQ=\", false, function () {\n  return [useLexicalComposerContext];\n});\n_c = MyCustomAutoFocusPlugin;\nfunction Editor() {\n  const initialConfig = {\n    namespace: 'MyEditor',\n    theme\n  };\n  return /*#__PURE__*/_jsxDEV(LexicalComposer, {\n    initialConfig: initialConfig,\n    children: [/*#__PURE__*/_jsxDEV(PlainTextPlugin, {\n      contentEditable: /*#__PURE__*/_jsxDEV(ContentEditable, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 26\n      }, this),\n      placeholder: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Enter some text...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 22\n      }, this),\n      ErrorBoundary: LexicalErrorBoundary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OnChangePlugin, {\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HistoryPlugin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyCustomAutoFocusPlugin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Editor;\nvar _c, _c2;\n$RefreshReg$(_c, \"MyCustomAutoFocusPlugin\");\n$RefreshReg$(_c2, \"Editor\");","map":{"version":3,"names":["useEffect","LexicalComposer","PlainTextPlugin","ContentEditable","HistoryPlugin","OnChangePlugin","useLexicalComposerContext","LexicalErrorBoundary","MyCustomAutoFocusPlugin","editor","focus","Editor","initialConfig","namespace","theme","onChange"],"sources":["/Users/hanauchiakiya/GitHub/re-Think/src/components/Note/index.tsx"],"sourcesContent":["import {$getRoot, $getSelection} from 'lexical';\nimport {useEffect} from 'react';\n\nimport {LexicalComposer} from '@lexical/react/LexicalComposer';\nimport {PlainTextPlugin} from '@lexical/react/LexicalPlainTextPlugin';\nimport {ContentEditable} from '@lexical/react/LexicalContentEditable';\nimport {HistoryPlugin} from '@lexical/react/LexicalHistoryPlugin';\nimport {OnChangePlugin} from '@lexical/react/LexicalOnChangePlugin';\nimport {useLexicalComposerContext} from '@lexical/react/LexicalComposerContext';\nimport LexicalErrorBoundary from '@lexical/react/LexicalErrorBoundary';\n\n// Lexical React plugins are React components, which makes them\n// highly composable. Furthermore, you can lazy load plugins if\n// desired, so you don't pay the cost for plugins until you\n// actually use them.\nfunction MyCustomAutoFocusPlugin() {\n  const [editor] = useLexicalComposerContext();\n\n  useEffect(() => {\n    // Focus the editor when the effect fires!\n    editor.focus();\n  }, [editor]);\n\n  return null;\n}\n\nfunction Editor() {\n  const initialConfig = {\n    namespace: 'MyEditor', \n    theme,\n  };\n\n  return (\n    <LexicalComposer initialConfig={initialConfig}>\n      <PlainTextPlugin\n        contentEditable={<ContentEditable />}\n        placeholder={<div>Enter some text...</div>}\n        ErrorBoundary={LexicalErrorBoundary}\n      />\n      <OnChangePlugin onChange={onChange} />\n      <HistoryPlugin />\n      <MyCustomAutoFocusPlugin />\n    </LexicalComposer>\n  );\n}\n"],"mappings":";;AACA,SAAQA,SAAS,QAAO,OAAO;AAE/B,SAAQC,eAAe,QAAO,gCAAgC;AAC9D,SAAQC,eAAe,QAAO,uCAAuC;AACrE,SAAQC,eAAe,QAAO,uCAAuC;AACrE,SAAQC,aAAa,QAAO,qCAAqC;AACjE,SAAQC,cAAc,QAAO,sCAAsC;AACnE,SAAQC,yBAAyB,QAAO,uCAAuC;AAC/E,OAAOC,oBAAoB,MAAM,qCAAqC;;AAEtE;AACA;AACA;AACA;AAAA;AACA,SAASC,uBAAuB,GAAG;EAAA;EACjC,MAAM,CAACC,MAAM,CAAC,GAAGH,yBAAyB,EAAE;EAE5CN,SAAS,CAAC,MAAM;IACd;IACAS,MAAM,CAACC,KAAK,EAAE;EAChB,CAAC,EAAE,CAACD,MAAM,CAAC,CAAC;EAEZ,OAAO,IAAI;AACb;AAAC,GATQD,uBAAuB;EAAA,QACbF,yBAAyB;AAAA;AAAA,KADnCE,uBAAuB;AAWhC,SAASG,MAAM,GAAG;EAChB,MAAMC,aAAa,GAAG;IACpBC,SAAS,EAAE,UAAU;IACrBC;EACF,CAAC;EAED,oBACE,QAAC,eAAe;IAAC,aAAa,EAAEF,aAAc;IAAA,wBAC5C,QAAC,eAAe;MACd,eAAe,eAAE,QAAC,eAAe;QAAA;QAAA;QAAA;MAAA,QAAI;MACrC,WAAW,eAAE;QAAA,UAAK;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAO;MAC3C,aAAa,EAAEL;IAAqB;MAAA;MAAA;MAAA;IAAA,QACpC,eACF,QAAC,cAAc;MAAC,QAAQ,EAAEQ;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG,eACtC,QAAC,aAAa;MAAA;MAAA;MAAA;IAAA,QAAG,eACjB,QAAC,uBAAuB;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACX;AAEtB;AAAC,MAlBQJ,MAAM;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}