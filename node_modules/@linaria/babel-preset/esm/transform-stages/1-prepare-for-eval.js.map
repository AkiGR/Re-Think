{"version":3,"file":"1-prepare-for-eval.js","names":["readFileSync","dirname","extname","createCustomDebug","buildOptions","getFileIdx","loadBabelOptions","withLinariaMetadata","cachedParseSync","loadLinariaOptions","isModuleResolver","i","key","runPreevalStage","babel","filename","code","options","perFileBabelConfig","pluginOptions","parseConfig","babelOptions","fullParserOptions","file","transformPlugins","require","resolve","moduleResolverPlugin","plugins","find","unshift","transformConfig","envName","sourceMaps","sourceFileName","inputSourceMap","root","ast","babelrc","configFile","result","transformFromAstSync","program","Error","getMatchedRule","rules","length","rule","test","RegExp","action","prepareCode","originalCode","only","fileCache","log","set","preevalStageResult","metadata","evaluator","paths","default","name","processQueueItem","item","cache","undefined","codeCache","results","Set","has","Map","extension","extensions","includes","join","uncachedExports","get","forEach","token","delete","add","size","imports","Array","from","remainExports","preparedCode","prepareForEvalSync","resolvedFile","stack","processed","queue","importsOnly","importedFile","resolved","resolveCache","fileContent","push","err","mutexes","prepareForEval","mutex","promises","promise","then","resolveCacheKey","cached","importsOnlySet","cachedOnly","split","Promise","all"],"sources":["../../src/transform-stages/1-prepare-for-eval.ts"],"sourcesContent":["import { readFileSync } from 'fs';\nimport { dirname, extname } from 'path';\n\nimport type { BabelFileResult, TransformOptions } from '@babel/core';\n\nimport { createCustomDebug } from '@linaria/logger';\nimport type { EvalRule, Evaluator } from '@linaria/utils';\nimport { buildOptions, getFileIdx, loadBabelOptions } from '@linaria/utils';\n\nimport type { Core } from '../babel';\nimport type { TransformCacheCollection } from '../cache';\nimport type Module from '../module';\nimport type { ITransformFileResult, Options } from '../types';\nimport withLinariaMetadata from '../utils/withLinariaMetadata';\n\nimport cachedParseSync from './helpers/cachedParseSync';\nimport loadLinariaOptions from './helpers/loadLinariaOptions';\n\nexport type FileInQueue = {\n  name: string;\n  code: string;\n  only: string[];\n} | null;\n\nconst isModuleResolver = (i: unknown): i is { options: unknown } =>\n  typeof i === 'object' &&\n  i !== null &&\n  (i as { key?: string }).key === 'module-resolver';\n\nfunction runPreevalStage(\n  babel: Core,\n  filename: string,\n  code: string,\n  options: Pick<Options, 'root' | 'pluginOptions' | 'inputSourceMap'>,\n  perFileBabelConfig?: TransformOptions\n): BabelFileResult {\n  const pluginOptions = loadLinariaOptions(options.pluginOptions);\n  const parseConfig = buildOptions(\n    pluginOptions?.babelOptions,\n    perFileBabelConfig\n  );\n\n  const fullParserOptions = loadBabelOptions(babel, filename, parseConfig);\n  const file = cachedParseSync(babel, code, fullParserOptions);\n\n  const transformPlugins: babel.PluginItem[] = [\n    [require.resolve('../plugins/preeval'), pluginOptions],\n  ];\n\n  const moduleResolverPlugin =\n    fullParserOptions.plugins?.find(isModuleResolver);\n  if (moduleResolverPlugin) {\n    transformPlugins.unshift(moduleResolverPlugin);\n  }\n\n  const transformConfig = buildOptions({\n    envName: 'linaria',\n    plugins: transformPlugins,\n    sourceMaps: true,\n    sourceFileName: filename,\n    inputSourceMap: options.inputSourceMap,\n    root: options.root,\n    ast: true,\n    babelrc: false,\n    configFile: false,\n  });\n\n  const result = babel.transformFromAstSync(file, code, {\n    ...transformConfig,\n    filename,\n  });\n\n  if (!result || !result.ast?.program) {\n    throw new Error('Babel transform failed');\n  }\n\n  return result;\n}\n\nfunction getMatchedRule(\n  rules: EvalRule[],\n  filename: string,\n  code: string\n): EvalRule {\n  for (let i = rules.length - 1; i >= 0; i--) {\n    const rule = rules[i];\n    if (!rule.test) {\n      return rule;\n    }\n\n    if (typeof rule.test === 'function' && rule.test(filename, code)) {\n      return rule;\n    }\n\n    if (rule.test instanceof RegExp && rule.test.test(filename)) {\n      return rule;\n    }\n  }\n\n  return { action: 'ignore' };\n}\n\nfunction prepareCode(\n  babel: Core,\n  filename: string,\n  originalCode: string,\n  only: string[],\n  options: Pick<Options, 'root' | 'pluginOptions' | 'inputSourceMap'>,\n  fileCache: Map<string | symbol, ITransformFileResult>\n): [\n  code: string,\n  imports: Module['imports'],\n  metadata?: babel.BabelFileMetadata\n] {\n  const log = createCustomDebug('transform', getFileIdx(filename));\n\n  const pluginOptions = loadLinariaOptions(options.pluginOptions);\n\n  const { action, babelOptions } = getMatchedRule(\n    pluginOptions.rules,\n    filename,\n    originalCode\n  );\n\n  if (action === 'ignore') {\n    log('stage-1:ignore', '');\n    fileCache.set('*', {\n      code: originalCode,\n    });\n\n    return [originalCode, null];\n  }\n\n  const preevalStageResult = runPreevalStage(\n    babel,\n    filename,\n    originalCode,\n    options,\n    babelOptions\n  );\n\n  if (\n    only.length === 1 &&\n    only[0] === '__linariaPreval' &&\n    !withLinariaMetadata(preevalStageResult.metadata)\n  ) {\n    log('stage-1:evaluator:end', 'no metadata');\n    return [preevalStageResult.code!, null, preevalStageResult.metadata];\n  }\n\n  log('stage-1:preeval', 'metadata %O', preevalStageResult.metadata);\n\n  // Action can be a function or a module name\n  const evaluator: Evaluator =\n    typeof action === 'function'\n      ? action\n      : require(require.resolve(action, {\n          paths: [dirname(filename)],\n        })).default;\n\n  log('stage-1:evaluator:start', 'using %s', evaluator.name);\n\n  const result = evaluator(\n    filename,\n    pluginOptions,\n    preevalStageResult.code!,\n    only,\n    babel\n  );\n\n  log('stage-1:evaluator:end', '');\n\n  return [...result, preevalStageResult.metadata];\n}\n\nfunction processQueueItem(\n  babel: Core,\n  item: {\n    name: string;\n    code: string;\n    only: string[];\n  } | null,\n  cache: TransformCacheCollection,\n  options: Pick<Options, 'root' | 'pluginOptions' | 'inputSourceMap'>\n):\n  | {\n      imports: Map<string, string[]> | null;\n      name: string;\n      results: ITransformFileResult[];\n    }\n  | undefined {\n  if (!item) {\n    return undefined;\n  }\n  const { codeCache } = cache;\n  const pluginOptions = loadLinariaOptions(options.pluginOptions);\n\n  const results = new Set<ITransformFileResult>();\n\n  const { name, only, code } = item;\n  if (!codeCache.has(name)) {\n    codeCache.set(name, new Map());\n  }\n\n  const log = createCustomDebug('transform', getFileIdx(name));\n\n  const extension = extname(name);\n  if (!pluginOptions.extensions.includes(extension)) {\n    log(\n      'init',\n      `${name} is ignored. If you want it to be processed, you should add '${extension}' to the \"extensions\" option.`\n    );\n    return undefined;\n  }\n\n  log('init', `${name} (${only.join(', ')})\\n${code}`);\n\n  const uncachedExports = new Set(only);\n  const fileCache = codeCache.get(name)!;\n  uncachedExports.forEach((token) => {\n    if (fileCache.has(token)) {\n      uncachedExports.delete(token);\n      results.add(fileCache.get(token)!);\n    }\n  });\n\n  if (uncachedExports.size === 0) {\n    // Already processed\n    return {\n      imports: null,\n      name,\n      results: Array.from(results),\n    };\n  }\n\n  const remainExports = Array.from(uncachedExports);\n\n  log('stage-1', `>> (${remainExports.join(', ')})`);\n\n  const [preparedCode, imports, metadata] = prepareCode(\n    babel,\n    name,\n    code,\n    remainExports,\n    options,\n    fileCache\n  );\n\n  if (code === preparedCode) {\n    log('stage-1', `<< (${remainExports.join(', ')})\\n === no changes ===`);\n  } else {\n    log('stage-1', `<< (${remainExports.join(', ')})\\n${preparedCode}`);\n  }\n\n  const result = {\n    metadata,\n    code: preparedCode,\n  };\n  results.add(result);\n\n  remainExports.forEach((token) => {\n    fileCache.set(token, result);\n  });\n\n  if (preparedCode === '') return undefined;\n\n  return {\n    imports,\n    name,\n    results: Array.from(results),\n  };\n}\n\nexport function prepareForEvalSync(\n  babel: Core,\n  cache: TransformCacheCollection,\n  resolve: (what: string, importer: string, stack: string[]) => string,\n  resolvedFile: FileInQueue,\n  options: Pick<Options, 'root' | 'pluginOptions' | 'inputSourceMap'>,\n  stack: string[] = []\n): ITransformFileResult[] | undefined {\n  const processed = processQueueItem(babel, resolvedFile, cache, options);\n  if (!processed) return undefined;\n\n  const { imports, name, results } = processed;\n\n  const log = createCustomDebug('transform', getFileIdx(name));\n\n  const queue: FileInQueue[] = [];\n\n  imports?.forEach((importsOnly, importedFile) => {\n    try {\n      const resolved = resolve(importedFile, name, stack);\n      log('stage-1:sync-resolve', `✅ ${importedFile} -> ${resolved}`);\n      cache.resolveCache.set(\n        `${name} -> ${importedFile}`,\n        `${resolved}\\0${importsOnly.join(',')}`\n      );\n      const fileContent = readFileSync(resolved, 'utf8');\n      queue.push({\n        name: resolved,\n        only: importsOnly,\n        code: fileContent,\n      });\n    } catch (err) {\n      log('stage-1:sync-resolve', `❌ cannot resolve ${importedFile}: %O`, err);\n    }\n  });\n\n  queue.forEach((item) => {\n    prepareForEvalSync(babel, cache, resolve, item, options, [name, ...stack]);\n  });\n\n  return Array.from(results);\n}\n\nconst mutexes = new Map<string, Promise<void>>();\n\n/**\n * Parses the specified file and recursively all its dependencies,\n * finds tags, applies eval-time replacements, removes dead code.\n */\nexport default async function prepareForEval(\n  babel: Core,\n  cache: TransformCacheCollection,\n  resolve: (\n    what: string,\n    importer: string,\n    stack: string[]\n  ) => Promise<string | null>,\n  file: Promise<FileInQueue>,\n  options: Pick<Options, 'root' | 'pluginOptions' | 'inputSourceMap'>,\n  stack: string[] = []\n): Promise<ITransformFileResult[] | undefined> {\n  const resolvedFile = await file;\n  const mutex = resolvedFile ? mutexes.get(resolvedFile.name) : null;\n  if (mutex) {\n    await mutex;\n  }\n\n  const processed = processQueueItem(babel, resolvedFile, cache, options);\n  if (!processed) return undefined;\n\n  const { imports, name, results } = processed;\n\n  const log = createCustomDebug('transform', getFileIdx(name));\n\n  const promises: Promise<ITransformFileResult[] | undefined>[] = [];\n\n  imports?.forEach((importsOnly, importedFile) => {\n    const promise = resolve(importedFile, name, stack).then(\n      (resolved) => {\n        if (resolved === null) {\n          log('stage-1:resolve', `✅ ${importedFile} is ignored`);\n          return null;\n        }\n\n        log('stage-1:async-resolve', `✅ ${importedFile} -> ${resolved}`);\n        const resolveCacheKey = `${name} -> ${importedFile}`;\n        const cached = cache.resolveCache.get(resolveCacheKey);\n        const importsOnlySet = new Set(importsOnly);\n        if (cached) {\n          const [, cachedOnly] = cached.split('\\0');\n          cachedOnly?.split(',').forEach((token) => {\n            importsOnlySet.add(token);\n          });\n        }\n\n        cache.resolveCache.set(\n          resolveCacheKey,\n          `${resolved}\\0${[...importsOnlySet].join(',')}`\n        );\n        const fileContent = readFileSync(resolved, 'utf8');\n        return {\n          name: resolved,\n          only: importsOnly,\n          code: fileContent,\n        };\n      },\n      (err: unknown) => {\n        log(\n          'stage-1:async-resolve',\n          `❌ cannot resolve ${importedFile}: %O`,\n          err\n        );\n        return null;\n      }\n    );\n\n    promises.push(\n      prepareForEval(babel, cache, resolve, promise, options, [name, ...stack])\n    );\n  });\n\n  const promise = Promise.all(promises).then(() => {});\n\n  mutexes.set(name, promise);\n\n  await promise;\n\n  mutexes.delete(name);\n\n  return Array.from(results);\n}\n"],"mappings":"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"}