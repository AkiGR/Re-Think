{"version":3,"file":"index.js","names":["debug","transform","loadLinariaOptions","slugify","default","preeval","collectTemplateDependencies","withLinariaMetadata","Module","transformUrl","isNode","getTagProcessor","getVisitorKeys","peek","processTemplateExpression","TransformCacheCollection","isEnabled","caller","name","evaluate","linaria","babel","options","JSON","stringify","plugins"],"sources":["../src/index.ts"],"sourcesContent":["/**\n * File defines babel prest for Linaria.\n * It uses ./extract function that is an entry point for styles extraction.\n * It also bypass babel options defined in Linaria config file with it's defaults (see ./utils/loadOptions).\n */\nimport type { ConfigAPI, TransformCaller } from '@babel/core';\n\nimport { debug } from '@linaria/logger';\n\nimport transform from './plugins/babel-transform';\nimport type { PluginOptions } from './transform-stages/helpers/loadLinariaOptions';\nimport loadLinariaOptions from './transform-stages/helpers/loadLinariaOptions';\n\nexport { slugify } from '@linaria/utils';\n\nexport { default as preeval } from './plugins/preeval';\nexport * from './utils/collectTemplateDependencies';\nexport { default as collectTemplateDependencies } from './utils/collectTemplateDependencies';\nexport { default as withLinariaMetadata } from './utils/withLinariaMetadata';\nexport { default as Module } from './module';\nexport { default as transform } from './transform';\nexport * from './types';\nexport { default as loadLinariaOptions } from './transform-stages/helpers/loadLinariaOptions';\nexport type { PluginOptions } from './transform-stages/helpers/loadLinariaOptions';\nexport { transformUrl } from './transform-stages/4-extract';\nexport { default as isNode } from './utils/isNode';\nexport { default as getTagProcessor } from './utils/getTagProcessor';\nexport { default as getVisitorKeys } from './utils/getVisitorKeys';\nexport type { VisitorKeys } from './utils/getVisitorKeys';\nexport { default as peek } from './utils/peek';\nexport { default as processTemplateExpression } from './utils/processTemplateExpression';\nexport { TransformCacheCollection } from './cache';\n\nfunction isEnabled(caller?: TransformCaller & { evaluate?: true }) {\n  return caller?.name !== 'linaria' || caller.evaluate === true;\n}\n\nexport default function linaria(babel: ConfigAPI, options: PluginOptions) {\n  if (!babel.caller(isEnabled)) {\n    return {};\n  }\n  debug('options', JSON.stringify(options));\n  return {\n    plugins: [[transform, loadLinariaOptions(options)]],\n  };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAGA,SAASA,KAAK,QAAQ,iBAAiB;AAEvC,OAAOC,SAAS,MAAM,2BAA2B;AAEjD,OAAOC,kBAAkB,MAAM,+CAA+C;AAE9E,SAASC,OAAO,QAAQ,gBAAgB;AAExC,SAASC,OAAO,IAAIC,OAAO,QAAQ,mBAAmB;AACtD,cAAc,qCAAqC;AACnD,SAASD,OAAO,IAAIE,2BAA2B,QAAQ,qCAAqC;AAC5F,SAASF,OAAO,IAAIG,mBAAmB,QAAQ,6BAA6B;AAC5E,SAASH,OAAO,IAAII,MAAM,QAAQ,UAAU;AAC5C,SAASJ,OAAO,IAAIH,SAAS,QAAQ,aAAa;AAClD,cAAc,SAAS;AACvB,SAASG,OAAO,IAAIF,kBAAkB,QAAQ,+CAA+C;AAE7F,SAASO,YAAY,QAAQ,8BAA8B;AAC3D,SAASL,OAAO,IAAIM,MAAM,QAAQ,gBAAgB;AAClD,SAASN,OAAO,IAAIO,eAAe,QAAQ,yBAAyB;AACpE,SAASP,OAAO,IAAIQ,cAAc,QAAQ,wBAAwB;AAElE,SAASR,OAAO,IAAIS,IAAI,QAAQ,cAAc;AAC9C,SAAST,OAAO,IAAIU,yBAAyB,QAAQ,mCAAmC;AACxF,SAASC,wBAAwB,QAAQ,SAAS;AAElD,SAASC,SAAS,CAACC,MAA8C,EAAE;EACjE,OAAOA,MAAM,EAAEC,IAAI,KAAK,SAAS,IAAID,MAAM,CAACE,QAAQ,KAAK,IAAI;AAC/D;AAEA,eAAe,SAASC,OAAO,CAACC,KAAgB,EAAEC,OAAsB,EAAE;EACxE,IAAI,CAACD,KAAK,CAACJ,MAAM,CAACD,SAAS,CAAC,EAAE;IAC5B,OAAO,CAAC,CAAC;EACX;EACAhB,KAAK,CAAC,SAAS,EAAEuB,IAAI,CAACC,SAAS,CAACF,OAAO,CAAC,CAAC;EACzC,OAAO;IACLG,OAAO,EAAE,CAAC,CAACxB,SAAS,EAAEC,kBAAkB,CAACoB,OAAO,CAAC,CAAC;EACpD,CAAC;AACH"}