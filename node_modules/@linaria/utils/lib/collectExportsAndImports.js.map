{"version":3,"file":"collectExportsAndImports.js","names":["sideEffectImport","item","imported","explicitImport","getValue","node","type","name","value","isType","p","importKind","exportKind","collectors","ImportSpecifier","path","source","get","local","ImportDefaultSpecifier","ImportNamespaceSpecifier","unfoldNamespaceImport","collectFromImportDeclaration","state","specifiers","length","imports","push","forEach","specifier","isImportSpecifier","collector","getAncestorsWhile","cond","result","current","parentPath","whatIsDestructed","objectPattern","destructedProps","traverse","Identifier","identifier","isBindingIdentifier","parent","isObjectProperty","chain","filter","isTypedNode","map","key","isIdentifier","isNotNull","reverse","what","as","isRestElement","argument","importFromVariableDeclarator","isSync","id","warn","isObjectPattern","exportFromVariableDeclarator","init","isExpression","exported","destructed","collectFromDynamicImport","callExpression","isCallExpression","sourcePath","isStringLiteral","container","isAwaited","isAwaitExpression","isVariableDeclarator","prop","getImportTypeByInteropFunction","callee","undefined","startsWith","collectFromRequire","isRequire","variableDeclarator","unfolded","isMemberExpression","property","isExpressionStatement","isChainOfVoidAssignment","right","isUnaryExpression","operator","isAssignmentExpression","getReturnValue","params","body","returnStatement","isReturnStatement","getGetterValueFromDescriptor","descriptor","getter","find","isFunctionExpression","isArrowFunctionExpression","collectFromExports","isExports","object","memberExpression","exportName","saveRef","exportRefs","has","set","assignmentExpression","left","exports","matchesPattern","obj","isObjectExpression","collectFromRequireOrExports","importItem","binding","getScope","getBinding","referenced","referencePath","referencePaths","ancestor","isTSType","isFlowType","computed","isExportSpecifier","collectFromExportAllDeclaration","reexports","collectFromExportSpecifier","isExportDefaultSpecifier","isExportNamespaceSpecifier","collectFromExportNamedDeclaration","declaration","isVariableDeclaration","declarator","isFunctionDeclaration","collectFromExportDefaultDeclaration","cache","WeakMap","collectFromAssignmentExpression","skip","collectFromExportStarCall","requireCall","collectFromMap","properties","isFunction","returnValue","collectFromEsbuildExportCall","sourceExports","collectFromEsbuildReExportCall","collectFromSwcExportCall","collectFromCallExpression","maybeExportStart","collectExportsAndImports","force","Map","AssignmentExpression","CallExpression","ExportAllDeclaration","ExportDefaultDeclaration","ExportNamedDeclaration","ImportDeclaration","Import"],"sources":["../src/collectExportsAndImports.ts"],"sourcesContent":["/* eslint @typescript-eslint/no-use-before-define: [\"error\", { \"functions\": false }] */\n/* eslint-disable no-restricted-syntax,no-continue */\n\nimport type { NodePath } from '@babel/traverse';\nimport type {\n  AssignmentExpression,\n  BlockStatement,\n  CallExpression,\n  ExportAllDeclaration,\n  ExportDefaultDeclaration,\n  ExportDefaultSpecifier,\n  ExportNamedDeclaration,\n  ExportNamespaceSpecifier,\n  ExportSpecifier,\n  Expression,\n  Function as FunctionNode,\n  Identifier,\n  Import,\n  ImportDeclaration,\n  ImportDefaultSpecifier,\n  ImportNamespaceSpecifier,\n  ImportSpecifier,\n  MemberExpression,\n  ObjectExpression,\n  ObjectPattern,\n  StringLiteral,\n  VariableDeclarator,\n} from '@babel/types';\n\nimport { warn } from '@linaria/logger';\n\nimport { getScope } from './getScope';\nimport isExports from './isExports';\nimport isNotNull from './isNotNull';\nimport isRequire from './isRequire';\nimport isTypedNode from './isTypedNode';\n\nexport interface ISideEffectImport {\n  imported: null;\n  local: NodePath;\n  source: string;\n}\n\nexport interface IImport {\n  imported: string | 'default' | '*';\n  local: NodePath<Identifier | MemberExpression>;\n  source: string;\n  type: 'cjs' | 'dynamic' | 'esm';\n}\n\nexport interface IExport {\n  exported: string | 'default' | '*'; // '*' means re-export all\n  local: NodePath;\n}\n\nexport interface IReexport {\n  exported: string | 'default' | '*';\n  imported: string | 'default' | '*';\n  local: NodePath;\n  source: string;\n}\n\nexport interface IState {\n  exportRefs: Map<string, NodePath<MemberExpression>[]>;\n  exports: IExport[];\n  imports: (IImport | ISideEffectImport)[];\n  reexports: IReexport[];\n}\n\nexport const sideEffectImport = (\n  item: IImport | ISideEffectImport\n): item is ISideEffectImport => item.imported === null;\n\nexport const explicitImport = (\n  item: IImport | ISideEffectImport\n): item is IImport => item.imported !== null;\n\nfunction getValue({ node }: { node: Identifier | StringLiteral }): string {\n  return node.type === 'Identifier' ? node.name : node.value;\n}\n\n// We ignore imports and exports of types\nconst isType = (p: {\n  node: { importKind?: 'type' | unknown } | { exportKind?: 'type' | unknown };\n}): boolean =>\n  ('importKind' in p.node && p.node.importKind === 'type') ||\n  ('exportKind' in p.node && p.node.exportKind === 'type');\n\n// Force TypeScript to check, that we have implementation for every possible specifier\ntype SpecifierTypes = ImportDeclaration['specifiers'][number];\nconst collectors: {\n  [K in SpecifierTypes['type']]: (\n    path: NodePath<SpecifierTypes & { type: K }>,\n    source: string\n  ) => IImport[];\n} = {\n  ImportSpecifier(path: NodePath<ImportSpecifier>, source): IImport[] {\n    if (isType(path)) return [];\n    const imported = getValue(path.get('imported'));\n    const local = path.get('local');\n    return [{ imported, local, source, type: 'esm' }];\n  },\n\n  ImportDefaultSpecifier(\n    path: NodePath<ImportDefaultSpecifier>,\n    source\n  ): IImport[] {\n    const local = path.get('local');\n    return [{ imported: 'default', local, source, type: 'esm' }];\n  },\n\n  ImportNamespaceSpecifier(\n    path: NodePath<ImportNamespaceSpecifier>,\n    source\n  ): IImport[] {\n    const local = path.get('local');\n    return unfoldNamespaceImport({ imported: '*', local, source, type: 'esm' });\n  },\n};\n\nfunction collectFromImportDeclaration(\n  path: NodePath<ImportDeclaration>,\n  state: IState\n): void {\n  // If importKind is specified, and it's not a value, ignore that import\n  if (isType(path)) return;\n\n  const source = getValue(path.get('source'));\n  const specifiers = path.get('specifiers');\n\n  if (specifiers.length === 0) {\n    state.imports.push({ imported: null, local: path, source });\n  }\n\n  specifiers.forEach(<T extends SpecifierTypes>(specifier: NodePath<T>) => {\n    if (specifier.isImportSpecifier() && isType(specifier)) return;\n\n    const collector = collectors[\n      specifier.node.type\n    ] as typeof collectors[T['type']];\n\n    state.imports.push(...collector(specifier, source));\n  });\n}\n\ninterface IDestructed {\n  what: string | '*';\n  as: NodePath<Identifier>;\n}\n\nfunction getAncestorsWhile(path: NodePath, cond: (p: NodePath) => boolean) {\n  const result: NodePath[] = [];\n  let current: NodePath | null = path;\n  while (current && cond(current)) {\n    result.push(current);\n    current = current.parentPath;\n  }\n\n  return result;\n}\n\nfunction whatIsDestructed(\n  objectPattern: NodePath<ObjectPattern>\n): IDestructed[] {\n  const destructedProps: IDestructed[] = [];\n  objectPattern.traverse({\n    Identifier(identifier) {\n      if (identifier.isBindingIdentifier()) {\n        const parent = identifier.parentPath;\n        if (parent.isObjectProperty({ value: identifier.node })) {\n          const chain = getAncestorsWhile(parent, (p) => p !== objectPattern)\n            .filter(isTypedNode('ObjectProperty'))\n            .map((p) => {\n              const key = p.get('key');\n              if (!key.isIdentifier()) {\n                // TODO: try to process other type of keys or at least warn about this\n                return null;\n              }\n\n              return key;\n            })\n            .filter(isNotNull);\n          chain.reverse();\n\n          if (chain.length > 0) {\n            destructedProps.push({\n              what: chain[0].node.name,\n              as: identifier,\n            });\n          }\n\n          return;\n        }\n\n        if (parent.isRestElement({ argument: identifier.node })) {\n          destructedProps.push({\n            what: '*',\n            as: identifier,\n          });\n        }\n      }\n    },\n  });\n\n  return destructedProps;\n}\n\nfunction importFromVariableDeclarator(\n  path: NodePath<VariableDeclarator>,\n  isSync: boolean\n): IDestructed[] {\n  const id = path.get('id');\n  if (id.isIdentifier()) {\n    // It's the simplest case when the full namespace is imported\n    return [\n      {\n        as: id,\n        what: '*',\n      },\n    ];\n  }\n\n  if (!isSync) {\n    // Something went wrong\n    // Is it something like `const { … } = import(…)`?\n    warn('evaluator:collectExportsAndImports', '`import` should be awaited');\n    return [];\n  }\n\n  if (id.isObjectPattern()) {\n    return whatIsDestructed(id);\n  }\n\n  // What else it can be?\n  warn(\n    'evaluator:collectExportsAndImports:importFromVariableDeclarator',\n    'Unknown type of id',\n    id.node.type\n  );\n\n  return [];\n}\n\nfunction exportFromVariableDeclarator(\n  path: NodePath<VariableDeclarator>\n): IExport[] {\n  const id = path.get('id');\n  const init = path.get('init');\n\n  // If there is no init expression, we can ignore this export\n  if (!init || !init.isExpression()) return [];\n\n  if (id.isIdentifier()) {\n    // It is `export const a = 1;`\n    return [\n      {\n        local: init,\n        exported: id.node.name,\n      },\n    ];\n  }\n\n  if (id.isObjectPattern()) {\n    // It is `export const { a, ...rest } = obj;`\n    return whatIsDestructed(id).map((destructed) => ({\n      local: init,\n      exported: destructed.as.node.name,\n    }));\n  }\n\n  // What else it can be?\n  warn(\n    'evaluator:collectExportsAndImports:exportFromVariableDeclarator',\n    'Unknown type of id',\n    id.node.type\n  );\n\n  return [];\n}\n\nfunction collectFromDynamicImport(path: NodePath<Import>, state: IState): void {\n  const { parentPath: callExpression } = path;\n  if (!callExpression.isCallExpression()) {\n    // It's wrong `import`\n    return;\n  }\n\n  const [sourcePath] = callExpression.get('arguments');\n  if (!sourcePath || !sourcePath.isStringLiteral()) {\n    // Import should have at least one argument, and it should be StringLiteral\n    return;\n  }\n\n  const source = sourcePath.node.value;\n\n  let { parentPath: container, key } = callExpression;\n  let isAwaited = false;\n\n  if (container.isAwaitExpression()) {\n    // If it's not awaited import, it imports the full namespace\n    isAwaited = true;\n    key = container.key;\n    container = container.parentPath!;\n  }\n\n  // Is it `const something = await import(\"something\")`?\n  if (key === 'init' && container.isVariableDeclarator()) {\n    importFromVariableDeclarator(container, isAwaited).map((prop) =>\n      state.imports.push({\n        imported: prop.what,\n        local: prop.as,\n        source,\n        type: 'dynamic',\n      })\n    );\n  }\n}\n\nfunction getImportTypeByInteropFunction(\n  path: NodePath<CallExpression>\n): '*' | 'default' | undefined {\n  const callee = path.get('callee');\n  if (!callee.isIdentifier()) {\n    return undefined;\n  }\n\n  const { name } = callee.node;\n  if (\n    name.startsWith('_interopRequireDefault') ||\n    name.startsWith('__importDefault')\n  ) {\n    return 'default';\n  }\n\n  if (\n    name.startsWith('_interopRequireWildcard') ||\n    name.startsWith('__importStar') ||\n    name.startsWith('__toESM')\n  ) {\n    return '*';\n  }\n\n  if (\n    name.startsWith('__rest') ||\n    name.startsWith('__objRest') ||\n    name.startsWith('_objectDestructuringEmpty')\n  ) {\n    return '*';\n  }\n\n  return undefined;\n}\n\nfunction collectFromRequire(path: NodePath<Identifier>, state: IState): void {\n  if (!isRequire(path)) return;\n\n  const { parentPath: callExpression } = path;\n  if (!callExpression.isCallExpression()) {\n    // It's wrong `require`\n    return;\n  }\n\n  const [sourcePath] = callExpression.get('arguments');\n  if (!sourcePath || !sourcePath.isStringLiteral()) {\n    // Import should have at least one argument, and it should be StringLiteral\n    return;\n  }\n\n  const source = sourcePath.node.value;\n\n  const { parentPath: container, key } = callExpression;\n\n  if (container.isCallExpression() && key === 0) {\n    // It may be transpiled import such as\n    // `var _atomic = _interopRequireDefault(require(\"@linaria/atomic\"));`\n    const imported = getImportTypeByInteropFunction(container);\n    if (!imported) {\n      // It's not a transpiled import.\n      // TODO: Can we guess that it's a namespace import?\n      warn(\n        'evaluator:collectExportsAndImports',\n        'Unknown wrapper of require',\n        container.node.callee\n      );\n      return;\n    }\n\n    let { parentPath: variableDeclarator } = container;\n    if (variableDeclarator.isCallExpression()) {\n      if (variableDeclarator.get('callee').isIdentifier({ name: '_extends' })) {\n        variableDeclarator = variableDeclarator.parentPath!;\n      }\n    }\n\n    if (!variableDeclarator.isVariableDeclarator()) {\n      // TODO: Where else it can be?\n      warn(\n        'evaluator:collectExportsAndImports',\n        'Unexpected require inside',\n        variableDeclarator.node.type\n      );\n      return;\n    }\n\n    const id = variableDeclarator.get('id');\n    if (!id.isIdentifier()) {\n      warn(\n        'evaluator:collectExportsAndImports',\n        'Id should be Identifier',\n        variableDeclarator.node.type\n      );\n      return;\n    }\n\n    if (imported === '*') {\n      const unfolded = unfoldNamespaceImport({\n        imported,\n        local: id,\n        source,\n        type: 'cjs',\n      });\n      state.imports.push(...unfolded);\n    } else {\n      state.imports.push({\n        imported,\n        local: id,\n        source,\n        type: 'cjs',\n      });\n    }\n  }\n\n  if (container.isMemberExpression()) {\n    // It is `require('@linaria/shaker').dep`\n    const property = container.get('property');\n    if (!property.isIdentifier() && !property.isStringLiteral()) {\n      warn(\n        'evaluator:collectExportsAndImports',\n        'Property should be Identifier or StringLiteral',\n        property.node.type\n      );\n\n      return;\n    }\n\n    const { parentPath: variableDeclarator } = container;\n\n    if (variableDeclarator.isVariableDeclarator()) {\n      // It is `const … = require('@linaria/shaker').dep`;\n      const id = variableDeclarator.get('id');\n      if (id.isIdentifier()) {\n        state.imports.push({\n          imported: getValue(property),\n          local: id,\n          source,\n          type: 'cjs',\n        });\n      } else {\n        warn(\n          'evaluator:collectExportsAndImports',\n          'Id should be Identifier',\n          variableDeclarator.node.type\n        );\n      }\n    } else {\n      // Maybe require is passed as an argument to some function?\n      // Just use the whole MemberExpression as a local\n      state.imports.push({\n        imported: getValue(property),\n        local: container,\n        source,\n        type: 'cjs',\n      });\n    }\n\n    return;\n  }\n\n  // Is it `const something = require(\"something\")`?\n  if (key === 'init' && container.isVariableDeclarator()) {\n    importFromVariableDeclarator(container, true).forEach((prop) => {\n      if (prop.what === '*') {\n        const unfolded = unfoldNamespaceImport({\n          imported: '*',\n          local: prop.as,\n          source,\n          type: 'cjs',\n        });\n\n        state.imports.push(...unfolded);\n      } else {\n        state.imports.push({\n          imported: prop.what,\n          local: prop.as,\n          source,\n          type: 'cjs',\n        });\n      }\n    });\n  }\n\n  if (container.isExpressionStatement()) {\n    // Looks like standalone require\n    state.imports.push({\n      imported: null,\n      local: container,\n      source,\n    });\n  }\n}\n\nfunction isChainOfVoidAssignment(\n  path: NodePath<AssignmentExpression>\n): boolean {\n  const right = path.get('right');\n  if (right.isUnaryExpression({ operator: 'void' })) {\n    return true;\n  }\n\n  if (right.isAssignmentExpression()) {\n    return isChainOfVoidAssignment(right);\n  }\n\n  return false;\n}\n\nfunction getReturnValue(\n  path: NodePath<FunctionNode>\n): NodePath<Expression> | undefined {\n  if (path.node.params.length !== 0) return undefined;\n\n  const body = path.get('body') as\n    | NodePath<BlockStatement>\n    | NodePath<Expression>;\n  if (body.isExpression()) {\n    return body;\n  }\n\n  if (body.node.body.length === 1) {\n    const returnStatement = body.get('body')?.[0];\n    if (!returnStatement.isReturnStatement()) return undefined;\n    const argument = returnStatement.get('argument');\n    if (!argument.isExpression()) return undefined;\n    return argument;\n  }\n\n  return undefined;\n}\n\nfunction getGetterValueFromDescriptor(\n  descriptor: NodePath<ObjectExpression>\n): NodePath<Expression> | undefined {\n  const getter = descriptor\n    .get('properties')\n    .filter(isTypedNode('ObjectProperty'))\n    .find((p) => p.get('key').isIdentifier({ name: 'get' }));\n  const value = getter?.get('value');\n\n  if (value?.isFunctionExpression() || value?.isArrowFunctionExpression()) {\n    return getReturnValue(value);\n  }\n\n  return undefined;\n}\n\nfunction collectFromExports(path: NodePath<Identifier>, state: IState): void {\n  if (!isExports(path)) return;\n\n  if (path.parentPath.isMemberExpression({ object: path.node })) {\n    // It is `exports.prop = …`\n    const memberExpression = path.parentPath;\n    const property = memberExpression.get('property');\n    if (!property.isIdentifier()) {\n      return;\n    }\n\n    const exportName = property.node.name;\n\n    const saveRef = () => {\n      // Save all export.____ usages for later\n      if (!state.exportRefs.has(exportName)) {\n        state.exportRefs.set(exportName, []);\n      }\n\n      state.exportRefs.get(exportName)!.push(memberExpression);\n    };\n\n    const assignmentExpression = memberExpression.parentPath;\n\n    if (\n      !assignmentExpression.isAssignmentExpression({\n        left: memberExpression.node,\n      })\n    ) {\n      // If it's not `exports.prop = …`. Just save it.\n      saveRef();\n      return;\n    }\n\n    const right = assignmentExpression.get('right');\n\n    if (isChainOfVoidAssignment(assignmentExpression)) {\n      // It is `exports.foo = void 0`\n      return;\n    }\n\n    const { name } = property.node;\n    if (name === '__esModule') {\n      return;\n    }\n\n    saveRef();\n    state.exports.push({ exported: property.node.name, local: right });\n\n    return;\n  }\n\n  if (\n    path.parentPath.isCallExpression() &&\n    path.parentPath.get('callee').matchesPattern('Object.defineProperty')\n  ) {\n    const [obj, prop, descriptor] = path.parentPath.get('arguments');\n    if (\n      obj?.isIdentifier(path.node) &&\n      prop?.isStringLiteral() &&\n      prop.node.value !== '__esModule' &&\n      descriptor?.isObjectExpression()\n    ) {\n      /**\n       *  Object.defineProperty(exports, \"token\", {\n       *    enumerable: true,\n       *    get: function get() {\n       *      return _unknownPackage.token;\n       *    }\n       *  });\n       */\n      const exported = prop.node.value;\n      const local = getGetterValueFromDescriptor(descriptor);\n      if (local) {\n        state.exports.push({ exported, local });\n      }\n    } else if (\n      obj?.isIdentifier(path.node) &&\n      prop?.isIdentifier() &&\n      descriptor?.isObjectExpression()\n    ) {\n      /**\n       *  Object.defineProperty(exports, key, {\n       *    enumerable: true,\n       *    get: function get() {\n       *      return _unknownPackage[key];\n       *    }\n       *  });\n       */\n      const local = getGetterValueFromDescriptor(descriptor);\n      if (local) {\n        state.exports.push({ exported: '*', local });\n      }\n    }\n  }\n}\n\nfunction collectFromRequireOrExports(\n  path: NodePath<Identifier>,\n  state: IState\n): void {\n  if (isRequire(path)) {\n    collectFromRequire(path, state);\n  } else if (isExports(path)) {\n    collectFromExports(path, state);\n  }\n}\n\nfunction unfoldNamespaceImport(\n  importItem: IImport & { imported: '*' }\n): IImport[] {\n  const result: IImport[] = [];\n  const { local } = importItem;\n  if (!local.isIdentifier()) {\n    // TODO: handle it\n    return [importItem];\n  }\n\n  const binding = getScope(local).getBinding(local.node.name);\n  if (!binding?.referenced) {\n    // Imported namespace is not referenced and probably not used,\n    // but it can have side effects, so we should keep it as is\n    return [importItem];\n  }\n\n  for (const referencePath of binding?.referencePaths ?? []) {\n    if (\n      referencePath.find(\n        (ancestor) => ancestor.isTSType() || ancestor.isFlowType()\n      )\n    ) {\n      continue;\n    }\n\n    const { parentPath } = referencePath;\n    if (parentPath?.isMemberExpression() && referencePath.key === 'object') {\n      const property = parentPath.get('property');\n      const object = parentPath.get('object');\n      let imported: string | null;\n      if (parentPath.node.computed && property.isStringLiteral()) {\n        imported = property.node.value;\n      } else if (!parentPath.node.computed && property.isIdentifier()) {\n        imported = property.node.name;\n      } else {\n        imported = null;\n      }\n\n      if (object.isIdentifier() && imported) {\n        result.push({\n          ...importItem,\n          imported,\n          local: parentPath,\n        });\n      } else {\n        result.push(importItem);\n        break;\n      }\n\n      continue;\n    }\n\n    if (parentPath?.isVariableDeclarator() && referencePath.key === 'init') {\n      importFromVariableDeclarator(parentPath, true).map((prop) =>\n        result.push({ ...importItem, imported: prop.what, local: prop.as })\n      );\n\n      continue;\n    }\n\n    if (parentPath?.isExportSpecifier()) {\n      // The whole namespace is re-exported\n      result.push(importItem);\n      break;\n    }\n\n    // Otherwise, we can't predict usage and import it as is\n    // TODO: handle more cases\n    warn(\n      'evaluator:collectExportsAndImports:unfoldNamespaceImports',\n      'Unknown reference',\n      referencePath.node.type\n    );\n    result.push(importItem);\n    break;\n  }\n\n  return result;\n}\n\nfunction collectFromExportAllDeclaration(\n  path: NodePath<ExportAllDeclaration>,\n  state: IState\n): void {\n  if (isType(path)) return;\n  const source = path.get('source')?.node?.value;\n  if (!source) return;\n\n  // It is `export * from './css';`\n  state.reexports.push({\n    exported: '*',\n    imported: '*',\n    local: path,\n    source,\n  });\n}\n\nfunction collectFromExportSpecifier(\n  path: NodePath<\n    ExportSpecifier | ExportDefaultSpecifier | ExportNamespaceSpecifier\n  >,\n  source: string | undefined,\n  state: IState\n): void {\n  if (path.isExportSpecifier()) {\n    const exported = getValue(path.get('exported'));\n    if (source) {\n      // It is `export { foo } from './css';`\n      const imported = path.get('local').node.name;\n      state.reexports.push({\n        exported,\n        imported,\n        local: path,\n        source,\n      });\n    } else {\n      const local = path.get('local');\n      state.exports.push({ local, exported });\n    }\n\n    return;\n  }\n\n  if (path.isExportDefaultSpecifier() && source) {\n    // It is `export default from './css';`\n    state.reexports.push({\n      exported: 'default',\n      imported: 'default',\n      local: path,\n      source,\n    });\n  }\n\n  if (path.isExportNamespaceSpecifier() && source) {\n    const exported = path.get('exported').node.name;\n    // It is `export * as foo from './css';`\n    state.reexports.push({\n      exported,\n      imported: '*',\n      local: path,\n      source,\n    });\n  }\n\n  // TODO: handle other cases\n  warn(\n    'evaluator:collectExportsAndImports:collectFromExportSpecifier',\n    'Unprocessed ExportSpecifier',\n    path.node.type\n  );\n}\n\nfunction collectFromExportNamedDeclaration(\n  path: NodePath<ExportNamedDeclaration>,\n  state: IState\n): void {\n  if (isType(path)) return;\n\n  const source = path.get('source')?.node?.value;\n  const specifiers = path.get('specifiers');\n  if (specifiers) {\n    specifiers.forEach((specifier) =>\n      collectFromExportSpecifier(specifier, source, state)\n    );\n  }\n\n  const declaration = path.get('declaration');\n  if (declaration.isVariableDeclaration()) {\n    declaration.get('declarations').forEach((declarator) => {\n      exportFromVariableDeclarator(declarator).forEach((prop) => {\n        // What is defined\n        state.exports.push(prop);\n      });\n    });\n  }\n\n  if (declaration.isFunctionDeclaration()) {\n    const id = declaration.get('id');\n    if (id.isIdentifier()) {\n      state.exports.push({\n        exported: id.node.name,\n        local: id,\n      });\n    }\n  }\n}\n\nfunction collectFromExportDefaultDeclaration(\n  path: NodePath<ExportDefaultDeclaration>,\n  state: IState\n): void {\n  if (isType(path)) return;\n\n  const declaration = path.get('declaration');\n  state.exports.push({ exported: 'default', local: declaration });\n}\n\nconst cache = new WeakMap<NodePath, IState>();\n\nfunction collectFromAssignmentExpression(\n  path: NodePath<AssignmentExpression>,\n  state: IState\n): void {\n  const left = path.get('left');\n  const right = path.get('right');\n\n  let exported: IReexport['exported'] | undefined;\n\n  if (left.isMemberExpression() && isExports(left.get('object'))) {\n    const property = left.get('property');\n    if (property.isIdentifier()) {\n      exported = property.node.name;\n    }\n  } else if (isExports(left)) {\n    exported = '*'; // maybe\n  }\n\n  if (!exported) return;\n\n  if (!right.isCallExpression() || !isRequire(right.get('callee'))) return;\n\n  const sourcePath = right.get('arguments')?.[0];\n  const source = sourcePath.isStringLiteral()\n    ? sourcePath.node.value\n    : undefined;\n  if (!source) return;\n\n  // It is `exports.foo = require('./css');`\n\n  state.reexports.push({\n    exported,\n    imported: '*',\n    local: path,\n    source,\n  });\n\n  path.skip();\n}\n\nfunction collectFromExportStarCall(\n  path: NodePath<CallExpression>,\n  state: IState\n) {\n  const [requireCall, exports] = path.get('arguments');\n  if (!isExports(exports)) return;\n  if (!requireCall.isCallExpression()) return;\n  const callee = requireCall.get('callee');\n  const sourcePath = requireCall.get('arguments')?.[0];\n  if (!isRequire(callee) || !sourcePath.isStringLiteral()) return;\n\n  const source = sourcePath.node.value;\n  if (!source) return;\n\n  state.reexports.push({\n    exported: '*',\n    imported: '*',\n    local: path,\n    source,\n  });\n\n  path.skip();\n}\n\nfunction collectFromMap(map: NodePath<ObjectExpression>, state: IState) {\n  const properties = map.get('properties');\n  properties.forEach((property) => {\n    if (!property.isObjectProperty()) return;\n    const key = property.get('key');\n    const value = property.get('value');\n    if (!key.isIdentifier()) return;\n    const exported = key.node.name;\n\n    if (!value.isFunction()) return;\n    if (value.node.params.length !== 0) return;\n\n    const returnValue = getReturnValue(value);\n    if (!returnValue) return;\n\n    state.exports.push({\n      exported,\n      local: returnValue,\n    });\n  });\n}\n\nfunction collectFromEsbuildExportCall(\n  path: NodePath<CallExpression>,\n  state: IState\n) {\n  const [sourceExports, map] = path.get('arguments');\n  if (!sourceExports.isIdentifier({ name: 'source_exports' })) return;\n  if (!map.isObjectExpression()) return;\n\n  collectFromMap(map, state);\n\n  path.skip();\n}\n\nfunction collectFromEsbuildReExportCall(\n  path: NodePath<CallExpression>,\n  state: IState\n) {\n  const [sourceExports, requireCall, exports] = path.get('arguments');\n  if (!sourceExports.isIdentifier({ name: 'source_exports' })) return;\n  if (!requireCall.isCallExpression()) return;\n  if (!isExports(exports)) return;\n\n  const callee = requireCall.get('callee');\n  if (!isRequire(callee)) return;\n  const sourcePath = requireCall.get('arguments')?.[0];\n  if (!sourcePath.isStringLiteral()) return;\n\n  state.reexports.push({\n    exported: '*',\n    imported: '*',\n    local: path,\n    source: sourcePath.node.value,\n  });\n\n  path.skip();\n}\n\nfunction collectFromSwcExportCall(\n  path: NodePath<CallExpression>,\n  state: IState\n) {\n  const [exports, map] = path.get('arguments');\n  if (!isExports(exports)) return;\n  if (!map.isObjectExpression()) return;\n\n  collectFromMap(map, state);\n\n  path.skip();\n}\n\nfunction collectFromCallExpression(\n  path: NodePath<CallExpression>,\n  state: IState\n) {\n  const maybeExportStart = path.get('callee');\n  if (!maybeExportStart.isIdentifier()) {\n    return;\n  }\n\n  const { name } = maybeExportStart.node;\n\n  // TypeScript\n  if (name.startsWith('__exportStar')) {\n    collectFromExportStarCall(path, state);\n    return;\n  }\n\n  // swc\n  if (name === '_exportStar') {\n    collectFromExportStarCall(path, state);\n  }\n\n  if (name === '_export') {\n    collectFromSwcExportCall(path, state);\n  }\n\n  // esbuild\n  if (name === '__export') {\n    collectFromEsbuildExportCall(path, state);\n  }\n\n  if (name === '__reExport') {\n    collectFromEsbuildReExportCall(path, state);\n  }\n}\n\nexport default function collectExportsAndImports(\n  path: NodePath,\n  force = false\n): IState {\n  const state: IState = {\n    exportRefs: new Map(),\n    exports: [],\n    imports: [],\n    reexports: [],\n  };\n\n  if (!force && cache.has(path)) {\n    return cache.get(path) ?? state;\n  }\n\n  path.traverse(\n    {\n      AssignmentExpression: collectFromAssignmentExpression,\n      CallExpression: collectFromCallExpression,\n      ExportAllDeclaration: collectFromExportAllDeclaration,\n      ExportDefaultDeclaration: collectFromExportDefaultDeclaration,\n      ExportNamedDeclaration: collectFromExportNamedDeclaration,\n      ImportDeclaration: collectFromImportDeclaration,\n      Import: collectFromDynamicImport,\n      Identifier: collectFromRequireOrExports,\n    },\n    state\n  );\n\n  cache.set(path, state);\n\n  return state;\n}\n"],"mappings":"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"}